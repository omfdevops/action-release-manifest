name: "JSON to CSV Converter"
description: "Converts a JSON file to CSV format and stores it in the specified location"
inputs:
  input_file:
    description: "The JSON file to be converted"
    required: true
  output_file:
    description: "The path where the CSV file will be saved"
    required: true
  NPM_REGISTRY_URL:
    description: "npm registry url"
    required: true
  NPM_AUTH:
    description: "npm auth"
    required: true  
  NPM_USER_EMAIL:
    description: "npm user email"
    required: true
  GA_OMFRLSORCH_APP_ID:
    description: "release orch app id"
    required: true
  GA_OMFRLSORCH_APP_PRIVATE_KEY:
    description: "release orch private key"
    required: true

    
    
  
  
  
runs:
  using: "composite"
  steps:
      #- name: Set up Node.js
        #uses: actions/setup-node@v2
        #with:
          #node-version: '16'

      - name: Generate Token for org
        id: generate_repo_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ inputs.GA_OMFRLSORCH_APP_ID }}
          private-key: ${{ inputs.GA_OMFRLSORCH_APP_PRIVATE_KEY }}
          owner: ${{ matrix.OWNER }}

      - name: Debug Token Creation
        shell: bash
        run: echo "Token Generated Successfully"
        env:
          TOKEN: ${{ steps.generate_repo_token.outputs.token }}


      - name: action-release-manifest Repository
        uses: actions/checkout@v4
        with:
          repository: omfdevops/action-release-manifest
          ref: main
          token: ${{ steps.generate_repo_token.outputs.token }}
          path: mulesoft-testing/action-release-manifest

      - name: action-release-manifest Repository
        uses: actions/checkout@v4
        with:
          repository: omfdevops/action-release-manifest
          ref: main
          token: ${{ steps.generate_repo_token.outputs.token }}
          path: mulesoft-testing/action-release-manifest

          
      - name: Install NPM Dependencies
        shell: bash
        run: |
          echo "NODE_PATH=/opt/node/18/bin" >> $GITHUB_ENV
          export PATH=$PATH:${{ env.NODE_PATH }}
          npm config set @omf:registry ${{ inputs.NPM_REGISTRY_URL }}
          npm config set //jfafn.jfrog.io/artifactory/api/npm/entsvc-npm/:_auth ${{ inputs.NPM_AUTH}}
          npm config set cafile '/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem'
          npm config set email ${{ inputs.NPM_USER_EMAIL }}
          npm config list
          npm install
          node -v

    
      - name: Run script
        shell: bash
        env: 
          input-file: ${{ inputs.input_file }}
          output-file: ${{ inputs.output_file }}
        run: |
          export PATH=$PATH:${{ env.NODE_PATH }}
          node -v
          pwd
          ls
          cd ..
          ls
          node ./.github/actions/json-to-csv-action/index.js

      #- name: Commit and Push CSV
        #shell: bash
        #env:
         #GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
         #OUTPUT_FILE:  ${{ inputs.output_file }}
        #if: success()
        #run: |
          #echo "The output file is: $OUTPUT_FILE"
          #cat $OUTPUT_FILE
          #git config --global user.name "github-actions[bot]"
          #git config --global user.email "github-actions[bot]@users.noreply.github.com"
          #realpath $OUTPUT_FILE
          #pwd
          #git status
          #git add $OUTPUT_FILE
          #git commit -m "Add converted CSV file from JSON"
          #git push
       
               

  # Step 3: Run the main script
    #- name: Run JSON to CSV script
    #  run: node index.js
    #  shell: bash
    #  working-directory: .github/actions/json-to-csv-action # Adjust this path as needed
    #  with:
    #    input-file: ${{ inputs.input-file }}
    #    output-file: ${{ inputs.output-file }}
